1. install project

npm create vite@latest

2. init and run project

npm install
npm run dev

3. install MUI

npm install @mui/material @emotion/react @emotion/styled

4. import font 

[in index.html]

<link rel="preconnect" href="https://fonts.googleapis.com" />
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
<link
  rel="stylesheet"
  href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500;700&display=swap"
/>

[at :root tag in index.css]

font-family: 'Roboto', sans-serif;

5. install icon

npm install @mui/icons-material

6. cssBaseLine (normalize and synchronous css in other device)

[in main.jsx]

import CssBaseline from '@mui/material/CssBaseline'
<CssBaseline />

7. delete some unused file such as: app.css, index,css

8. import theme to project

[create theme.js in src]

import { createTheme } from '@mui/material/styles';
import { red } from '@mui/material/colors';

// Create a theme instance.
const theme = createTheme({
  cssVariables: true,
  palette: {
    primary: {
      main: '#556cd6',
    },
    secondary: {
      main: '#19857b',
    },
    error: {
      main: red.A400,
    },
  },
});

export default theme;

[in main.jsx]

import { ThemeProvider } from '@mui/material/styles'
import theme from './theme'

[edit code in main.jsx, cover project in ThemeProvider]

<ThemeProvider theme={theme}>
  <CssBaseline />
  <App />
</ThemeProvider>

9. toggle mode

[in theme.js]

const theme = createTheme({
    colorSchemes: {
        light: {
            palette: {
                primary: { main: "#556cd6" },
                secondary: { main: "#19857b" },
            },
        },
        dark: {
            palette: {
                primary: { main: "#90caf9" },
                secondary: { main: "#f48fb1" },
            },
        }
    },
});

[in App.js]

function ModeToggle() {
  const { mode, setMode } = useColorScheme()
  return (
    <Button onClick={() => setMode(mode === 'light' ? 'dark' : 'light')}>
      {mode === 'light' ? 'Dark' : 'Light'}
    </Button>
  )

}

10. restructure

[create pages folder in src]

-> create detail layouts for each page in separate folder
-> create index.jsx, _id.jsx or subfolder if page is large

[create components folder in src]

[create utils folder in src]

11. change relative import to absulote import 

[in vite.config.js]

export default defineConfig({
  plugins: [react()],
  resolve: {
    alias: [
      {find: '~', replacement: '/src'}
    ]
  }
})

12. go to detail file 

[create jsconfig.json at the same level with vite.config.js]

{
    "compilerOptions": {
        "paths": {
            "~/*": ["./src/*"]
        }
    }
}

13. reate dom, navagate page by params url

[install]

npm install react-router-dom

[render smoothly]

import { AppProvider } from '@toolpad/core/react-router-dom'; //  core/AppProvider for single side page

[usage]
<Button
    component={Link} // use Link like child component
    to={`/history/${params.id}`} // navigate to route
    variant="outlined"
>
    View
</Button>

<Link to="/">Home</Link>

[define route/path]
<Routes>
    <Route path="/" element={<BalancePage />} />

    <Route path="/history" element={<HistoryPage />} />

    <Route path="/history/:id" element={<HistoryDetailPage />} />
</Routes>